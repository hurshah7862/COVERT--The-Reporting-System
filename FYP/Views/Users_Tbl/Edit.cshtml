@model FYP.Models.Users_Tbl
@using FYP.Models;

@{
    ViewBag.Title = "Edit";
    FYPBDEntities db = new FYPBDEntities();
    Users_Tbl u = new Users_Tbl();
}

<link href="~/Content/bootstrap.css" rel="stylesheet" />
<body>
    <div class="container">
        <div class="row">
            <div class="col-md-8 col-lg-offset-2">
                <br />
                <br />
                <br />
                @using (Html.BeginForm())
            {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.UserId)


                        @Html.HiddenFor(model => model.RollId, new { htmlAttributes = new { @class = "form-control" } })

                        <div style="color:red"><b>@ViewData["ED"]</b></div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-lg-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control required" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-lg-2" })
                            <div class="col-md-10">
                                @if (Session["id"] != null)
                                {
                                    u = db.Users_Tbl.Find(Session["id"]);
                                    if (u.RollId == 1)
                                    {
                                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control required" } })

                                    }
                                    else if (u.RollId == 2)
                                    {
                                        @Html.EditorFor(Model => Model.Status, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })

                                    }
                                }
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-lg-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-lg-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>







                        <div class="form-group">
                            @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @type = "number", @class = "form-control required" } })
                                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
                            </div>
                        </div>





                        <div class="form-group">
                            @Html.LabelFor(model => model.CNIC, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CNIC, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.CNIC, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-lg-2" })
                            <div class="col-md-10">
                                @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control required" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        @Html.HiddenFor(model => model.SignUpDate, new { htmlAttributes = new { @class = "form-control" } })



                        @Html.HiddenFor(model => model.ApprovalDate, new { htmlAttributes = new { @class = "form-control" } })


                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default col-lg-2" />
                            </div>
                        </div>
                    </div>
                }
            </div>



        </div>
        @Html.ActionLink("Back to List", "Index")
        <br />
    </div>
    <br />
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
</body>