@using PagedList;
@using PagedList.Mvc;
@model IPagedList<FYP.Models.Posts_Tbl>
@using FYP.Models;
@{
    ViewBag.Title = "pendingposts";
    Users_Tbl u = new Users_Tbl();
    FYPBDEntities db = new FYPBDEntities();
    Category_Tbl c = new Category_Tbl();

}






<link href="~/Content/bootstrap.css" rel="stylesheet" />


<div class="container">
    <div class="panel panel-primary dialog-panel" style="margin-top:100px">
        <div class="panel-heading">
            <h3 class="text-center"><b>Pending Posts</b></h3>
        </div>
    </div>




    <!DOCTYPE html>
    <html lang="en">
    <head>
        <title>Bootstrap Example</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <script src="~/Content/JS/jquery.min.js"></script>
        <script src="~/Content/JS/bootstrap.min.js"></script>
        <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    </head>
    <body>


        <div class="container">


            @if (Model.Count() <= 0)
            {
                <tr>
                    <td>
                        NO RECORDS TO SHOW
                    </td>
                </tr>
            }
            @{
                int z = 0;

            }
            <div style="color:deepskyblue">
                <b>
                    @ViewData["Error"]
            </b>
        </div>
        @foreach (var item in Model)
        {
            <div class="panel panel-default col-lg-8 ">
                @{int x = 0;
                    z++;
                }


                <div class="panel-heading"><h2><b>@Html.DisplayFor(modelItem => item.PostName)</b></h2></div>
                <div id="myCarousel-@z" class="carousel slide" data-ride="carousel" data-interval="false">
                    <!-- Indicators -->
                    <!-- Wrapper for slides -->
                    <div class="carousel-inner">
                        @{

                            List<Visual_Tbl> imglist = db.Visual_Tbl.Where(i => i.PostId == item.PostId).ToList();
                            foreach (var imgs in imglist)

                            {
                                <div class="item @if (x==0) { <text>active</text>
                                    x++;
                                } ">
                                    <div class="panel-body">
                                        @if (imgs.Url.Contains(".png") || imgs.Url.Contains(".jpg") || imgs.Url.Contains(".tiff") || imgs.Url.Contains(".tif") || imgs.Url.Contains(".bmp") || imgs.Url.Contains(".jpeg") || imgs.Url.Contains(".gif") || imgs.Url.Contains(".eps") || imgs.Url.Contains(".sr2") || imgs.Url.Contains(".orf") || imgs.Url.Contains(".nef") || imgs.Url.Contains(".cr2") || imgs.Url.Contains(".raw"))
                                        {
                                            <img style="height:300px;width:300px; margin:0 auto; background:url('@Url.Content(imgs.Url)'); background-size:contain;  background-repeat:no-repeat;" />
                                        }
                                        @if (imgs.Url.Contains(".avi") || imgs.Url.Contains(".flv") || imgs.Url.Contains(".wmv") || imgs.Url.Contains(".mov") || imgs.Url.Contains(".mp4"))
                                        {
                                            <video id="video" src="@Url.Content(imgs.Url)" style=" width=720px; height=500px;" controls="true" loop="true" />
                                        }
                                    </div>
                                </div>

                            }
                        }
                        <!-- Left and right controls -->
                        <a class="left carousel-control" href="#myCarousel-@z" data-slide="prev">
                            <span class="glyphicon glyphicon-chevron-left"></span>
                            <span class="sr-only">Previous</span>
                        </a>
                        <a class="right carousel-control" href="#myCarousel-@z" data-slide="next">
                            <span class="glyphicon glyphicon-chevron-right"></span>
                            <span class="sr-only">Next</span>
                        </a>

                    </div>


                </div>
                <div class="panel-footer">@Html.DisplayFor(modelItem => item.PostDescription)</div>
                <div class="panel-body"><b>Posted On:</b> @Html.DisplayFor(modelItem => item.ApprovalDate)</div>
                <div class="panel-footer">
                    @if (Session["id"] != null)
                {
                    u = db.Users_Tbl.Find(Session["id"]);
                    if (u.RollId == 1)
                    {

                            <h6>
                                @{
                                    u = db.Users_Tbl.Find(item.UserId);
                                }

                                <b>Posted By:</b> @Html.DisplayFor(modelItem => u.Name)
                            </h6>
                                        }
                                    }

                    <h6>
                        @{
                            c = db.Category_Tbl.Find(item.CategoryId);
                        }

                        <b>Category:</b> @Html.DisplayFor(modelItem => c.Name)
                    </h6>
                </div>
                <div class="panel-body">
                    @if (Session["id"] != null)
                {
                    u = db.Users_Tbl.Find(Session["id"]);
                    if (u.RollId == 1 || u.UserId == item.UserId)
                    {
                            @Html.ActionLink("Approve", "Edits", new { id = item.PostId }, new { @class = "btn btn-success" })
                            @Html.ActionLink("Details", "Details", new { id = item.PostId }, new { @class = "btn btn-default" })
                            @Html.ActionLink("Discard", "Delete", new { id = item.PostId }, new { @class = "btn btn-danger" })

                        }
                    }

                    @Html.ActionLink("Comments", "comments", new { id = item.PostId }, new { @class = "btn btn-primary" })
                </div>
            </div>
                            }



        <div class="">
            @Html.PagedListPager(Model, Page => Url.Action("pendingposts", new { Page }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true, DisplayItemSliceAndTotal = true })
        </div>

    </div>

</html>
</div>